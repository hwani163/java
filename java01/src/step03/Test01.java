package step03;

/* 산술 연산자 
 * +, -, *, /, %
 */
public class Test01 {

  public static void main(String[] args) {
    // 10은 자바에서 32비트 정수이다. 
    // v1에 넣을 수 없는데 오류가 발생하지 않는다.
    // 이유?
    // 리터럴로 값을 표현하고, 해당 메모리에 그 값을 넣을 수 있다면, 
    // int 값이라고 하더라도 byte, short 메모리에 넣는 것을 허락한다.
    
    byte v1 = 10; //허락 
    byte v2 = 20; //허락 
    //byte v3 = 128; //거절!
    
    int i1 = 10;
    //v1 = i1;  //변수에 들어 있는 값이 저장 가능한 값이라도, 크기가 작으면 넣을 수 없다. 

    byte v4 = 10 + 20; //리터럴과 리터럴의 연산 결과는 리터럴이다. 
    //byte v5 = 10 + v2; //리터럴과 변수의 연산결과는 변수이다. 불가!
    // 10 + v2가 변수라 하더라도 v2가 byte 형이기 때문에 저장할 수 있어야 하는게 아닌가?
    byte v5 = v4; // 바이트 변수의 값을 직접 바이트 변수에 넣을 때는 허락한다. 복제이니까.
    // 연산 결과는 byte 범위를 넘어 갈 수 있기 때문에 허락할 수 없다.
    
    //두 바이트 변수의 결과를 short에 넣을 수 있을까?
    byte v6 = 127;
    byte v7 = 127;
    //short s1 = v6 + v7; //오류! 자바의 최소 연산 단위는 32비이트 이다.
    //즉, v6의 값을 32비트 임시 메모리에 저장하고, 
    //v7의 값을 32비트 임시 메모리에 저장한 후 계산하기 때문이다. 
    
    int i2 = v6 + v7; //OK! 
    //v6의 값은 암시적으로 int 형으로 바뀐다. 
    // => implicit type conversion(암시적 형변환) 
    
    //권고! 메모리 아깝다 생각말고 계산은 int로!
    //byte와 short에 대해서는 연산자가 등록되어 있지 않다.
  }

}












